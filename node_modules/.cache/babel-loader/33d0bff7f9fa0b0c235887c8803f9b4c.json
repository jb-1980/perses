{"ast":null,"code":"import _slicedToArray from \"/home/joseph/projects/perses/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/joseph/projects/perses/src/question-editor.tsx\";\nimport * as React from \"react\";\nimport { Editor } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { templates } from \"./templates\";\nimport { Panel, PanelHeading, PanelTitle, PanelBody, PanelFooter, Pills } from \"./UI\";\nimport { Renderer } from \"./renderer\";\nimport { Editors } from \"./widgets\";\nimport { EditorContextProvider, useEditorContext } from \"./contexts/editor-context\";\nimport { RendererContextProvider } from \"./contexts/renderer-context\";\nvar initialEditorContents = {\n  question: {\n    content: \"\",\n    images: {},\n    widgets: {}\n  },\n  hints: {}\n};\nexport var QuestionEditor = function QuestionEditor(_ref) {\n  var _ref$initialContents = _ref.initialContents,\n      initialContents = _ref$initialContents === void 0 ? initialEditorContents : _ref$initialContents;\n  return React.createElement(EditorContextProvider, {\n    initialContents: initialContents,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ProvidedQuestionEditor, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nvar ProvidedQuestionEditor = function ProvidedQuestionEditor() {\n  var _useEditorContext = useEditorContext(),\n      serialize = _useEditorContext.serialize;\n\n  var _React$useState = React.useState(\"editor\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      view = _React$useState2[0],\n      setView = _React$useState2[1];\n\n  var tabs = [{\n    id: \"editor\",\n    name: \"Editor\"\n  }, {\n    id: \"renderer\",\n    name: \"Renderer\"\n  }];\n  var views = {\n    editor: React.createElement(EditorView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    renderer: React.createElement(RendererContextProvider, {\n      itemData: serialize(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Renderer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))\n  };\n  var currentView = views[view];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Pills, {\n    tabs: tabs,\n    activeTab: view,\n    clickHandler: setView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), currentView);\n};\n\nvar WidgetSelect = function WidgetSelect(_ref2) {\n  var onChange = _ref2.onChange;\n  return React.createElement(\"select\", {\n    value: \"default\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Insert a widget\\u2026\"), Editors.map(function (_ref3) {\n    var type = _ref3.type,\n        displayName = _ref3.displayName;\n    return React.createElement(\"option\", {\n      value: type,\n      key: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, displayName);\n  }));\n};\n\nvar EditorView = function EditorView() {\n  var _useEditorContext2 = useEditorContext(),\n      question = _useEditorContext2.question,\n      editorState = _useEditorContext2.editorState,\n      updateEditorContent = _useEditorContext2.updateEditorContent,\n      insertWidget = _useEditorContext2.insertWidget,\n      insertTemplate = _useEditorContext2.insertTemplate;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Panel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(PanelHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(PanelTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Question\")), React.createElement(PanelBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Editor, {\n    editorState: editorState,\n    onChange: updateEditorContent,\n    placeholder: \"Type your question here\\u2026\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(PanelFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(WidgetSelect, {\n    onChange: function onChange(e) {\n      return insertWidget(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    value: \"default\",\n    onChange: function onChange(e) {\n      return insertTemplate(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Insert a template\\u2026\"), Object.keys(templates).map(function (t) {\n    return React.createElement(\"option\", {\n      value: t,\n      key: t,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, t);\n  })))), Object.entries(question.widgets).map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        key = _ref5[0],\n        value = _ref5[1];\n\n    var WidgetEditor = value.editor;\n    return React.createElement(Panel, {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(PanelHeading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(PanelTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, key)), React.createElement(PanelBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(WidgetEditor, Object.assign({\n      id: key\n    }, value.options, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))));\n  }));\n};","map":{"version":3,"sources":["/home/joseph/projects/perses/src/question-editor.tsx"],"names":["React","Editor","templates","Panel","PanelHeading","PanelTitle","PanelBody","PanelFooter","Pills","Renderer","Editors","EditorContextProvider","useEditorContext","RendererContextProvider","initialEditorContents","question","content","images","widgets","hints","QuestionEditor","initialContents","ProvidedQuestionEditor","serialize","useState","view","setView","tabs","id","name","views","editor","renderer","currentView","WidgetSelect","onChange","map","type","displayName","EditorView","editorState","updateEditorContent","insertWidget","insertTemplate","e","target","value","Object","keys","t","entries","key","WidgetEditor","options"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport { Editor } from \"draft-js\"\nimport \"draft-js/dist/Draft.css\"\n\nimport { templates } from \"./templates\"\nimport {\n  Panel,\n  PanelHeading,\n  PanelTitle,\n  PanelBody,\n  PanelFooter,\n  Pills,\n} from \"./UI\"\nimport { Renderer } from \"./renderer\"\nimport { Editors } from \"./widgets\"\nimport {\n  EditorContextProvider,\n  useEditorContext,\n} from \"./contexts/editor-context\"\nimport { RendererContextProvider } from \"./contexts/renderer-context\"\n\nconst initialEditorContents = {\n  question: {\n    content: \"\",\n    images: {},\n    widgets: {},\n  },\n  hints: {},\n}\n\nexport const QuestionEditor = ({ initialContents = initialEditorContents }) => (\n  <EditorContextProvider initialContents={initialContents}>\n    <ProvidedQuestionEditor />\n  </EditorContextProvider>\n)\n\nconst ProvidedQuestionEditor = () => {\n  const { serialize } = useEditorContext()\n  const [view, setView] = React.useState(\"editor\")\n  const tabs = [\n    { id: \"editor\", name: \"Editor\" },\n    { id: \"renderer\", name: \"Renderer\" },\n  ]\n\n  const views: { [key: string]: JSX.Element } = {\n    editor: <EditorView />,\n    renderer: (\n      <RendererContextProvider itemData={serialize()}>\n        <Renderer />\n      </RendererContextProvider>\n    ),\n  }\n  let currentView = views[view]\n\n  return (\n    <div>\n      <Pills tabs={tabs} activeTab={view} clickHandler={setView} />\n      {currentView}\n    </div>\n  )\n}\n\nconst WidgetSelect = ({ onChange }) => (\n  <select value=\"default\" onChange={onChange}>\n    <option value=\"default\">Insert a widget…</option>\n    {Editors.map(({ type, displayName }) => (\n      <option value={type} key={type}>\n        {displayName}\n      </option>\n    ))}\n  </select>\n)\n\nconst EditorView = () => {\n  const {\n    question,\n    editorState,\n    updateEditorContent,\n    insertWidget,\n    insertTemplate,\n  } = useEditorContext()\n\n  return (\n    <div>\n      <Panel>\n        <PanelHeading>\n          <PanelTitle>Question</PanelTitle>\n        </PanelHeading>\n        <PanelBody>\n          <Editor\n            editorState={editorState}\n            onChange={updateEditorContent}\n            placeholder=\"Type your question here…\"\n          />\n        </PanelBody>\n        <PanelFooter>\n          <WidgetSelect onChange={e => insertWidget(e.target.value)} />\n          <select\n            value=\"default\"\n            onChange={e => insertTemplate(e.target.value)}\n          >\n            <option value=\"default\">Insert a template…</option>\n            {Object.keys(templates).map(t => (\n              <option value={t} key={t}>\n                {t}\n              </option>\n            ))}\n          </select>\n        </PanelFooter>\n      </Panel>\n      {Object.entries(question.widgets).map(([key, value]) => {\n        const WidgetEditor = value.editor\n        return (\n          <Panel key={key}>\n            <PanelHeading>\n              <PanelTitle>{key}</PanelTitle>\n            </PanelHeading>\n            <PanelBody>\n              <WidgetEditor id={key} {...value.options} />\n            </PanelBody>\n          </Panel>\n        )\n      })}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}