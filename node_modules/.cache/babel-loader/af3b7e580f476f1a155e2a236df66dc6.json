{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/joseph/projects/perses/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/joseph/projects/perses/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/joseph/projects/perses/src/UI/text-list-editor.tsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n        list-style: none;\\n        padding: 0;\\n      \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n            min-width: 20px;\\n          \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          display: \", \";\\n          margin: \", \";\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css } from \"emotion\";\nexport var TextListEditor = function TextListEditor(_ref) {\n  var list = _ref.list,\n      setList = _ref.setList,\n      _ref$layout = _ref.layout,\n      layout = _ref$layout === void 0 ? \"horizontal\" : _ref$layout;\n\n  var getTextWidth = function getTextWidth(text) {\n    return \"\".concat(text.length + 1, \"ch\");\n  };\n\n  var updateList = function updateList(e, i) {\n    var _list = _toConsumableArray(list);\n\n    _list[i] = e.target.value;\n    return setList(_list);\n  };\n\n  var nodes = list.reduce(function (nodes, element, i) {\n    if (i + 1 === list.length) {\n      if (element !== \"\") {\n        setList([].concat(_toConsumableArray(list), [\"\"]));\n      }\n    } else if (i !== 0 && element === \"\") {\n      var _list = _toConsumableArray(list);\n\n      _list.splice(i, 1);\n\n      setList(_list);\n    }\n\n    nodes.push(React.createElement(\"li\", {\n      key: i,\n      className: css(_templateObject(), layout === \"horizontal\" ? \"inline\" : \"inherit\", layout === \"horizontal\" ? \"0 2px\" : \"2px 0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: element,\n      onChange: function onChange(e) {\n        return updateList(e, i);\n      },\n      className: css(_templateObject2()),\n      style: {\n        width: getTextWidth(element)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n    return nodes;\n  }, []);\n  return React.createElement(\"ul\", {\n    className: css(_templateObject3()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, nodes);\n};","map":{"version":3,"sources":["/home/joseph/projects/perses/src/UI/text-list-editor.tsx"],"names":["React","css","TextListEditor","list","setList","layout","getTextWidth","text","length","updateList","e","i","_list","target","value","nodes","reduce","element","splice","push","width"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA8C;AAAA,MAA3CC,IAA2C,QAA3CA,IAA2C;AAAA,MAArCC,OAAqC,QAArCA,OAAqC;AAAA,yBAA5BC,MAA4B;AAAA,MAA5BA,MAA4B,4BAAnB,YAAmB;;AAC1E,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,qBAAqBA,IAAI,CAACC,MAAL,GAAc,CAAnC;AAAA,GAArB;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAIC,CAAJ,EAAU;AAC3B,QAAMC,KAAK,sBAAOT,IAAP,CAAX;;AACAS,IAAAA,KAAK,CAACD,CAAD,CAAL,GAAWD,CAAC,CAACG,MAAF,CAASC,KAApB;AACA,WAAOV,OAAO,CAACQ,KAAD,CAAd;AACD,GAJD;;AAKA,MAAMG,KAAK,GAAGZ,IAAI,CAACa,MAAL,CAAY,UAACD,KAAD,EAAQE,OAAR,EAAiBN,CAAjB,EAAuB;AAC/C,QAAIA,CAAC,GAAG,CAAJ,KAAUR,IAAI,CAACK,MAAnB,EAA2B;AACzB,UAAIS,OAAO,KAAK,EAAhB,EAAoB;AAClBb,QAAAA,OAAO,8BAAKD,IAAL,IAAW,EAAX,GAAP;AACD;AACF,KAJD,MAIO,IAAIQ,CAAC,KAAK,CAAN,IAAWM,OAAO,KAAK,EAA3B,EAA+B;AACpC,UAAML,KAAK,sBAAOT,IAAP,CAAX;;AACAS,MAAAA,KAAK,CAACM,MAAN,CAAaP,CAAb,EAAgB,CAAhB;;AACAP,MAAAA,OAAO,CAACQ,KAAD,CAAP;AACD;;AAEDG,IAAAA,KAAK,CAACI,IAAN,CACE;AACE,MAAA,GAAG,EAAER,CADP;AAEE,MAAA,SAAS,EAAEV,GAAF,oBACII,MAAM,KAAK,YAAX,GAA0B,QAA1B,GAAqC,SADzC,EAEGA,MAAM,KAAK,YAAX,GAA0B,OAA1B,GAAoC,OAFvC,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEY,OAFT;AAGE,MAAA,QAAQ,EAAE,kBAAAP,CAAC;AAAA,eAAID,UAAU,CAACC,CAAD,EAAIC,CAAJ,CAAd;AAAA,OAHb;AAIE,MAAA,SAAS,EAAEV,GAAF,oBAJX;AAOE,MAAA,KAAK,EAAE;AAAEmB,QAAAA,KAAK,EAAEd,YAAY,CAACW,OAAD;AAArB,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAmBA,WAAOF,KAAP;AACD,GA/Ba,EA+BX,EA/BW,CAAd;AAiCA,SACE;AACE,IAAA,SAAS,EAAEd,GAAF,oBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGc,KANH,CADF;AAUD,CAnDM","sourcesContent":["import React from \"react\"\nimport { css } from \"emotion\"\n\nexport const TextListEditor = ({ list, setList, layout = \"horizontal\" }) => {\n  const getTextWidth = (text: string) => `${text.length + 1}ch`\n\n  const updateList = (e, i) => {\n    const _list = [...list]\n    _list[i] = e.target.value\n    return setList(_list)\n  }\n  const nodes = list.reduce((nodes, element, i) => {\n    if (i + 1 === list.length) {\n      if (element !== \"\") {\n        setList([...list, \"\"])\n      }\n    } else if (i !== 0 && element === \"\") {\n      const _list = [...list]\n      _list.splice(i, 1)\n      setList(_list)\n    }\n\n    nodes.push(\n      <li\n        key={i}\n        className={css`\n          display: ${layout === \"horizontal\" ? \"inline\" : \"inherit\"};\n          margin: ${layout === \"horizontal\" ? \"0 2px\" : \"2px 0\"};\n        `}\n      >\n        <input\n          type=\"text\"\n          value={element}\n          onChange={e => updateList(e, i)}\n          className={css`\n            min-width: 20px;\n          `}\n          style={{ width: getTextWidth(element) }}\n        />\n      </li>\n    )\n    return nodes\n  }, [])\n\n  return (\n    <ul\n      className={css`\n        list-style: none;\n        padding: 0;\n      `}\n    >\n      {nodes}\n    </ul>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}